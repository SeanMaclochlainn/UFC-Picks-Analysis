@model FightData.Domain.Entities.Exhibition
@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        @for (int i = 0; i < Model.Webpages.Count; i++)
        {
            <div class="form-group">
                @Html.LabelFor(m=> new WebsiteFinder().FindAllWebsites()[i].WebsiteName, (new WebsiteFinder().FindAllWebsites()[i].WebsiteName.ToString() + " URL"), htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(m=>m.Webpages[i].Id)
                    @Html.HiddenFor(m=>m.Webpages[i].Website.Id)
                    @Html.EditorFor(m=> m.Webpages[i].Url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Webpages[i].Url, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>

}
